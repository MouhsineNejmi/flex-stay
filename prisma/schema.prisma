generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id() @default(uuid())
  username      String        @unique
  email         String        @unique
  emailVerified Boolean       @default(false)
  image         String        @default("https://gravatar.com/avatar/ac447fc970080acc58f3fad587cd61c7?s=400&d=mp&r=x")
  password      String
  role          RoleEnumType  @default(user)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  favoriteIds   String[]
  Reservation   Reservation[]

  @@map("users")
}

enum RoleEnumType {
  admin
  user
}

model Listing {
  id            String   @id @default(uuid())
  title         String
  description   String
  images        String[]
  price         Float
  roomCount     Int
  bathroomCount Int
  guestCount    Int
  location      String
  userId        String
  categoryId    String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  category     Category      @relation(fields: [categoryId], references: [id])
  reservations Reservation[]

  @@map("listings")
}

model Category {
  id        String   @id @default(uuid())
  icon      String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listings Listing[]

  @@map("categories")
}

model Reservation {
  id         String   @id @default(uuid())
  userId     String
  listingId  String
  totalPrice Float
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@map("reservations")
}
